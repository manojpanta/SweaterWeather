cities = [ "New York",
           "Chicago",
           "Houston",
           "Philadelphia",
           "Phoenix",
           "San Antonio",
           "San Diego",
           "Dallas",
           "San Jose",
           "Austin",
           "Indianapolis",
           "Jacksonville",
           "San Francisco",
           "Columbus",
           "Charlotte",
           "Fort Worth",
           "Detroit",
           "El Paso",
           "Memphis",
           "Seattle",
           "Denver",
           "Washington",
           "Boston",
           "Nashville-Davidson",
           "Baltimore",
           "Oklahoma City",
           "Louisville/Jefferson County",
           "Portland",
           "Las Vegas",
           "Milwaukee",
           "Albuquerque",
           "Tucson",
           "Fresno",
           "Sacramento",
           "Long Beach",
           "Kansas City",
           "Mesa",
           "Arizona",
           "Virginia Beach",
           "Atlanta",
           "Colorado Springs",
           "Omaha",
           "Raleigh",
           "Miami",
           "Oakland",
           "Minneapolis",
           "Tulsa",
           "Cleveland",
           "Wichita",
           "Arlington",
           "New Orleans",
           "Bakersfield",
           "Tampa",
           "Honolulu",
           "Aurora",
           "Anaheim",
           "Santa Ana",
           "St. Louis",
           "Riverside",
           "Corpus Christi",
           "Lexington-Fayette",
           "Pittsburgh",
           "Anchorage",
           "Stockton",
           "Cincinnati"]
namespace :start do
  desc :"starting now"
  task :running => :environment do
    cities.each do |city|
      weather = Weather.find_or_create_by(location: city.downcase) do |w|#, weather_data: ForecastFacade.new(city).service_response.to_json)
      end
      weather.update(weather_data: ForecastFacade.new(city).service_response.to_json)
    end
  end
end
# Time.at(JSON.parse(Weather.first.weather_data)["currently"]["time"])
# JSON.parse(Weather.first.weather_data)["currently"]["time"]
